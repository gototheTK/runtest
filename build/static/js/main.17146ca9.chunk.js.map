{"version":3,"sources":["Functions/HttpMethod.js","Parts/Login/JoinForm.js","Parts/Login/LoginForm.js","Parts/Header.js","Parts/Board/BoardItem.js","Parts/PartsConstants.js","Parts/Board/BoardModal.js","Parts/User/UserModal.js","Parts/Board/BoardList.js","Parts/Board/ReplyForm.js","Parts/Board/ReplyItem.js","Parts/Board/BoardPage.js","Parts/Board/BoardModifyPage.js","Parts/Body.js","Home.js","App.js","index.js"],"names":["HOST_DOMAIN","REFRESH_TOKEN","ACCESS_TOKEN","POST","Logout","localStorage","removeItem","ResToken","response","access_token","headers","get","setItem","GetRequest","method","refresh_token","getItem","PostRequest","body","JSON","stringify","digitFormat","num","slice","convertFormatToDate","responseDate","timestamp","Date","parse","betweenTime","now","datePieces","getFullYear","getMonth","getDate","timepieces","getHours","getMinutes","getSeconds","JoinForm","show","move","close","useState","username","password","passwordCheck","item","changeValue","e","target","name","value","Modal","size","aria-labelledby","centered","onHide","Header","style","display","justifyContent","alignItems","Title","background","color","id","Body","InputGroup","Text","FormControl","onChange","aria-label","aria-describedby","type","Footer","Button","variant","onClick","preventDefault","fetch","then","json","alert","catch","error","LoginForm","dispatch","useContext","UserDispatch","status","setUser","active","isLogin","setIsLogin","isJoin","setIsJoin","keyword","setKeyword","toLoginForm","Navbar","className","sticky","expand","bg","Row","Col","Brand","href","Form","placeholder","user","BoardItem","props","Card","boarder","text","position","recommend","interest","replys","length","title","to","content","boardFiles","map","file","Img","src","filePath","count","createTime","OUTLINE_LIGHT","BoardModal","userInterests","setShow","getBoardList","radioValue","setRadioValue","board","setBoard","imgBase64","setImgBase64","files","setFiles","console","log","changeInterest","userInterrest","write","multipleFiles","FormData","Object","values","forEach","append","Blob","max_width","backdrop","keyboard","closeButton","Container","ButtonGroup","Group","controlId","as","rows","i","reader","FileReader","readAsDataURL","onloadend","base64","result","base64Sub","toString","img","xs","md","CloseButton","temp1","push","temp2","cancelButton","Image","rounded","UserModal","setUserInterests","setInterest","interests","setInterests","deleteInterest","doamin","temp","err","getInterests","useEffect","getUserInterests","Tab","defaultActiveKey","Nav","Item","Link","eventKey","Content","Pane","disabled","siza","usersinterest","writeUserInterest","BoardList","userShow","setUserShow","page","total","pages","boards","items","setItems","location","search","domain","marginLeft","Pagination","First","Last","marginTop","vertical","getBoardsByRecommend","interset","getBoardsOfInterest","ReplyForm","boardId","getReply","history","reply","setReply","writeReply","ReplyItem","parent","groupId","handleClose","parentId","OverlayTrigger","trigger","rootClose","onToggle","placement","overlay","Popover","opacity","BoardPage","match","params","resReply","setResReply","setRecommend","Subtitle","statusCode","ButtonToolbar","BoardModifyPage","CancelBoardFiles","pop","Control","modify","path","exact","component","createContext","Home","Provider","App","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17146ca9.chunk.js","sourcesContent":["// Host 정보\nexport const HOST_DOMAIN = \"http://3.36.55.12:8080\";\nexport const REFRESH_TOKEN = \"refresh_token\";\nexport const ACCESS_TOKEN = \"access_token\";\nexport const AUTHORIZATION = \"Authorization\";\nexport const USERNAME = \"username\";\n\n//메소드\nexport const GET = \"GET\";\nexport const POST = \"POST\";\nexport const PUT = \"PUT\";\nexport const DELETE = \"DELETE\";\n\nexport const Logout = () => {\n  localStorage.removeItem(REFRESH_TOKEN);\n  localStorage.removeItem(USERNAME);\n  localStorage.removeItem(ACCESS_TOKEN);\n};\n\nexport const ResToken = (response) => {\n  const access_token = response.headers.get(ACCESS_TOKEN);\n  if (access_token !== null) {\n    localStorage.setItem(ACCESS_TOKEN, access_token);\n  } else {\n    Logout();\n  }\n};\n\nexport const GetRequest = () => {\n  return {\n    method: GET,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      refresh_token: localStorage.getItem(REFRESH_TOKEN),\n      access_token: localStorage.getItem(ACCESS_TOKEN),\n    },\n  };\n};\n\nexport const PostRequest = (body) => ({\n  method: POST,\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    refresh_token: localStorage.getItem(REFRESH_TOKEN),\n    access_token: localStorage.getItem(ACCESS_TOKEN),\n  },\n  body: JSON.stringify(body),\n});\n\nexport const PutRequest = (body) => ({\n  method: PUT,\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    refresh_token: localStorage.getItem(REFRESH_TOKEN),\n    access_token: localStorage.getItem(ACCESS_TOKEN),\n  },\n  body: JSON.stringify(body),\n});\n\nexport const DeleteRequest = () => ({\n  method: DELETE,\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    refresh_token: localStorage.getItem(REFRESH_TOKEN),\n    access_token: localStorage.getItem(ACCESS_TOKEN),\n  },\n});\n\n//시간구하기\nconst DayHours = 1000 * 3600 * 24;\n\nconst digitFormat = (num) => {\n  return (\"0\" + num).slice(-2);\n};\n\nexport function convertFormatToDate(responseDate) {\n  const timestamp = new Date(Date.parse(responseDate));\n  const betweenTime = Date.now() - timestamp;\n\n  const datePieces = `${digitFormat(timestamp.getFullYear())}-${digitFormat(\n    timestamp.getMonth()\n  )}-${digitFormat(timestamp.getDate())}`;\n  const timepieces = `${digitFormat(timestamp.getHours())}:${digitFormat(\n    timestamp.getMinutes()\n  )}:${digitFormat(timestamp.getSeconds())}`;\n\n  return betweenTime < DayHours ? timepieces : datePieces;\n}\n","import React, { useState } from \"react\";\nimport { Button, FormControl, InputGroup, Modal } from \"react-bootstrap\";\nimport { HOST_DOMAIN, PostRequest, Logout } from \"../../Functions/HttpMethod\";\n\nconst JoinForm = ({ show, move, close }) => {\n  const [item, setItem] = useState({\n    username: \"\",\n    password: \"\",\n    passwordCheck: \"\",\n  });\n\n  const changeValue = (e) => {\n    setItem({ ...item, [e.target.name]: e.target.value });\n  };\n\n  const join = (e) => {\n    e.preventDefault();\n    const name = \"회원가입\";\n    const domain = \"/join\";\n    fetch(`${HOST_DOMAIN + domain}`, PostRequest(item))\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => {\n        if (response === 200) {\n          alert(\"아이디가 이미 존재합니다\");\n        } else if (response === 201) {\n          alert(\"회원가입이 완료되었습니다.\");\n          Logout();\n          move();\n        }\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  return (\n    <Modal\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-lg\"\n      centered\n      show={show}\n      onHide={close}\n    >\n      <Modal.Header\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Modal.Title\n          style={{ background: \"#212529\", color: \"white\" }}\n          id=\"contained-modal-title-vcenter\"\n        >\n          회원가입\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <InputGroup size=\"lg\">\n          <InputGroup.Text\n            id=\"inputGroup-sizing-lg\"\n            style={{ background: \"#212529\", color: \"white\" }}\n          >\n            유 저 아 이 디\n          </InputGroup.Text>\n          <FormControl\n            style={{ background: \"#212529\", color: \"white\" }}\n            name=\"username\"\n            onChange={changeValue}\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n          />\n        </InputGroup>\n        <hr />\n        <InputGroup size=\"lg\">\n          <InputGroup.Text\n            id=\"inputGroup-sizing-lg\"\n            style={{ background: \"#212529\", color: \"white\" }}\n          >\n            비밀번호입력\n          </InputGroup.Text>\n          <FormControl\n            style={{ background: \"#212529\", color: \"white\" }}\n            type=\"password\"\n            name=\"password\"\n            onChange={changeValue}\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n          />\n        </InputGroup>\n        <hr />\n        <InputGroup size=\"lg\">\n          <InputGroup.Text\n            id=\"inputGroup-sizing-lg\"\n            style={{ background: \"#212529\", color: \"white\" }}\n          >\n            비밀번호확인\n          </InputGroup.Text>\n          <FormControl\n            style={{ background: \"#212529\", color: \"white\" }}\n            type=\"password\"\n            name=\"passwordCheck\"\n            onChange={changeValue}\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n          />\n        </InputGroup>\n      </Modal.Body>\n      <Modal.Footer\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Button size=\"lg\" variant=\"outline-light\" type=\"submit\" onClick={join}>\n          회원가입\n        </Button>\n\n        <Button size=\"lg\" variant=\"outline-light\" onClick={move}>\n          이전\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default JoinForm;\n","import React, { useContext, useState } from \"react\";\nimport { Button, FormControl, InputGroup, Modal } from \"react-bootstrap\";\nimport {\n  ACCESS_TOKEN,\n  HOST_DOMAIN,\n  PostRequest,\n  REFRESH_TOKEN,\n} from \"../../Functions/HttpMethod\";\nimport { UserDispatch } from \"../../Home\";\n\nconst LoginForm = ({ show, move, close }) => {\n  const dispatch = useContext(UserDispatch);\n\n  const [item, setItem] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const changeValue = (e) => {\n    setItem({ ...item, [e.target.name]: e.target.value });\n  };\n\n  const login = (e) => {\n    e.preventDefault();\n    const name = \"로그인\";\n    const domain = \"/login\";\n    fetch(`${HOST_DOMAIN + domain}`, PostRequest(item))\n      .then((response) => {\n        if (response.status === 200) {\n          localStorage.setItem(\n            ACCESS_TOKEN,\n            response.headers.get(ACCESS_TOKEN)\n          );\n          localStorage.setItem(\n            REFRESH_TOKEN,\n            response.headers.get(REFRESH_TOKEN)\n          );\n          localStorage.setItem(\"username\", item.username);\n          close();\n          dispatch.setUser({\n            username: localStorage.getItem(\"username\"),\n            active: true,\n          });\n        }\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  return (\n    <Modal\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-lg\"\n      centered\n      show={show}\n      onHide={close}\n    >\n      <Modal.Header\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Modal.Title\n          style={{ background: \"#212529\", color: \"white\" }}\n          id=\"contained-modal-title-vcenter\"\n        >\n          로그인\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <InputGroup size=\"lg\">\n          <InputGroup.Text\n            id=\"inputGroup-sizing-lg\"\n            style={{ background: \"#212529\", color: \"white\" }}\n          >\n            유저아이디\n          </InputGroup.Text>\n          <FormControl\n            style={{ background: \"#212529\", color: \"white\" }}\n            name=\"username\"\n            onChange={changeValue}\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n          />\n        </InputGroup>\n        <hr />\n        <InputGroup size=\"lg\">\n          <InputGroup.Text\n            id=\"inputGroup-sizing-lg\"\n            style={{ background: \"#212529\", color: \"white\" }}\n          >\n            비 밀 번 호\n          </InputGroup.Text>\n          <FormControl\n            style={{ background: \"#212529\", color: \"white\" }}\n            type=\"password\"\n            name=\"password\"\n            onChange={changeValue}\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n          />\n        </InputGroup>\n      </Modal.Body>\n      <Modal.Footer\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Button size=\"lg\" variant=\"outline-light\" type=\"submit\" onClick={login}>\n          로그인\n        </Button>\n\n        <Button size=\"lg\" variant=\"outline-light\" onClick={move}>\n          회원가입\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default LoginForm;\n","import React, { useContext, useState } from \"react\";\nimport { Navbar, Form, FormControl, Button, Col, Row } from \"react-bootstrap\";\nimport { Logout } from \"../Functions/HttpMethod\";\nimport { UserDispatch } from \"../Home\";\nimport JoinForm from \"./Login/JoinForm\";\nimport LoginForm from \"./Login/LoginForm\";\n\nconst Header = () => {\n  const [isLogin, setIsLogin] = useState(false);\n  const [isJoin, setIsJoin] = useState(false);\n  const dispatch = useContext(UserDispatch);\n  const [keyword, setKeyword] = useState(\"\");\n\n  const changeValue = (e) => {\n    setKeyword(`${e.target.value}`);\n  };\n\n  const close = () => {\n    setIsLogin(false);\n    setIsJoin(false);\n  };\n\n  const toLoginForm = () => {\n    setIsLogin(true);\n    setIsJoin(false);\n  };\n\n  const toJoinForm = () => {\n    setIsLogin(false);\n    setIsJoin(true);\n  };\n\n  return (\n    <>\n      <Navbar\n        className=\"row justify-content-center\"\n        sticky=\"top\"\n        expand=\"lg\"\n        bg=\"dark\"\n        variant=\"dark\"\n      >\n        <Row className=\"d-flex-row justify-content-center\">\n          <Col className=\"d-flex justify-content-center\">\n            <Navbar.Brand href=\"/\">Portfolio</Navbar.Brand>\n          </Col>\n          <Col className=\"col-6\">\n            <Form className=\"d-flex\">\n              <FormControl\n                size=\"lg\"\n                type=\"search\"\n                name=\"keyword\"\n                className=\"md-6\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                style={{ background: \"#212529\", color: \"white\" }}\n                onChange={changeValue}\n              />\n\n              <Button\n                onClick={() => {\n                  dispatch.setKeyword(keyword);\n                }}\n                size=\"lg\"\n                variant=\"outline-secondary\"\n              >\n                Search\n              </Button>\n            </Form>\n          </Col>\n\n          <Col className=\"d-flex justify-content-center\">\n            {dispatch.user.active ? (\n              <Button\n                variant={\"outline-secondary\"}\n                onClick={() => {\n                  Logout();\n                  dispatch.setUser({\n                    username: null,\n                    active: false,\n                  });\n                }}\n              >\n                로그아웃\n              </Button>\n            ) : (\n              <Button variant={\"outline-secondary\"} onClick={toLoginForm}>\n                로그인\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Navbar>\n      <>\n        <LoginForm show={isLogin} move={toJoinForm} close={close} />\n        <JoinForm show={isJoin} move={toLoginForm} close={close} />\n      </>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { convertFormatToDate, HOST_DOMAIN } from \"../../Functions/HttpMethod\";\n\nconst BoardItem = (props) => {\n  const item = props.item;\n\n  return (\n    <>\n      <Card\n        key={item.id}\n        boarder={\"info\"}\n        bg={\"dark\"}\n        text={\"white\"}\n        style={{ position: \"center\" }}\n        className=\"text-center\"\n      >\n        <Card.Header className=\"d-flex justify-content-between\">\n          <strong>추천수:{item.recommend}</strong>\n\n          <span> 작정자: {item.user.username}</span>\n        </Card.Header>\n        <Card.Header className=\"d-flex justify-content-between\">\n          <span>{item.interest.name}</span>\n          <span>댓글수: {item.replys.length}</span>\n        </Card.Header>\n        <br />\n        <Card.Title>\n          <h4>{item.title}</h4>\n        </Card.Title>\n        <Card.Body>\n          <Link to={\"/board/\" + item.id}>\n            <Card.Text>{item.content}</Card.Text>\n\n            {item.boardFiles.map((file) => {\n              return (\n                <Card.Img\n                  key={file.id}\n                  src={`${HOST_DOMAIN + \"/\" + file.filePath}`}\n                />\n              );\n            })}\n          </Link>\n        </Card.Body>\n        <Card.Footer className=\"d-flex justify-content-between text-muted\">\n          <span>조회수:{item.count}</span>\n          <span>작성날짜:{convertFormatToDate(item.createTime)}</span>\n        </Card.Footer>\n      </Card>\n      <br />\n    </>\n  );\n};\n\nexport default BoardItem;\n","// Button Color\n\nexport const OUTLINE_LIGHT = \"outline-light\";\n\nexport const LOGIN = \"/login\";\nexport const JOIN = \"/join\";\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Form,\n  FormControl,\n  Modal,\n  Row,\n  Image,\n  CloseButton,\n  Container,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport {\n  ACCESS_TOKEN,\n  HOST_DOMAIN,\n  Logout,\n  REFRESH_TOKEN,\n  ResToken,\n} from \"../../Functions/HttpMethod\";\nimport { UserDispatch } from \"../../Home\";\nimport { OUTLINE_LIGHT } from \"../PartsConstants\";\n\nconst max_width = `\"max-width\": \"1000px\"`;\n// const style = `opacity: 0.9, \"background-color\": \"#212529\", color: \"white\"`;\n\nconst BoardModal = ({ userInterests, show, setShow, getBoardList }) => {\n  const dispatch = useContext(UserDispatch);\n\n  const [radioValue, setRadioValue] = useState(1);\n\n  const [board, setBoard] = useState({\n    title: \"\",\n    content: \"\",\n    interest: {},\n  });\n\n  const [imgBase64, setImgBase64] = useState([{}]);\n  const [files, setFiles] = useState([]);\n\n  const changeValue = (e) => {\n    setBoard({ ...board, [e.target.name]: e.target.value });\n    console.log(board);\n  };\n\n  const changeInterest = (userInterrest) => {\n    console.log(userInterrest);\n    setBoard({\n      ...board,\n      interest: userInterrest,\n    });\n    setRadioValue(userInterrest.id);\n  };\n\n  const cancelButton = (name) => {\n    const temp1 = [];\n\n    imgBase64.map((img) => {\n      if (img.name === name) {\n      } else {\n        temp1.push(img);\n      }\n    });\n    setImgBase64(temp1);\n\n    const temp2 = [];\n    files.map((file) => {\n      if (file.name === name) {\n      } else {\n        temp2.push(file);\n      }\n    });\n    setFiles(temp2);\n  };\n\n  const uploadFiles = (e) => {\n    for (let i = 0; i < e.target.files.length; i++) {\n      if (e.target.files[i]) {\n        console.log(e.target.files[i]);\n        setFiles([...files, e.target.files[i]]);\n        let reader = new FileReader();\n        reader.readAsDataURL(e.target.files[i]);\n        reader.onloadend = () => {\n          const base64 = reader.result;\n          if (base64) {\n            let name = e.target.files[i].name;\n            let base64Sub = base64.toString();\n\n            setImgBase64((imgBase64) => [\n              ...imgBase64,\n              { id: i, name: name, img: base64Sub },\n            ]);\n          }\n        };\n      }\n    }\n  };\n\n  const beforeWirte = (e) => {\n    e.preventDefault();\n    if (board.title === \"\" || board.content === \"\") {\n      alert(\"제목과 글을 입력하여주세요\");\n    } else {\n      write();\n    }\n  };\n\n  const write = () => {\n    const name = \"글쓰기\";\n    const domain = \"/api/board/write\";\n    let multipleFiles = new FormData();\n\n    if (files) {\n      Object.values(files).forEach((file) => {\n        multipleFiles.append(\"files\", file);\n      });\n    }\n\n    userInterests.map((interest) => {\n      if (radioValue === interest.id + \"\") {\n        setBoard({ ...board, interest: interest });\n      }\n    });\n\n    console.log(\"게시판:\" + board);\n    console.log(board);\n\n    multipleFiles.append(\n      \"board\",\n      new Blob([JSON.stringify(board)], {\n        type: \"application/json\",\n      })\n    );\n\n    fetch(`${HOST_DOMAIN + domain}`, {\n      method: \"POST\",\n      headers: {\n        refresh_token: localStorage.getItem(REFRESH_TOKEN),\n        access_token: localStorage.getItem(ACCESS_TOKEN),\n      },\n      body: multipleFiles,\n    })\n      .then((response) => {\n        if (response.status === 403) {\n          dispatch.setUser({\n            username: localStorage.getItem(\"username\"),\n            active: localStorage.getItem(\"username\") !== null ? true : false,\n          });\n          alert(\"다시 로그인하여 주세요\");\n        }\n        ResToken(response);\n        setImgBase64([]);\n        setFiles([]);\n        getBoardList();\n        setShow(false);\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      onHide={() => setShow(false)}\n      show={show}\n      style={{ max_width }}\n      backdrop=\"static\"\n      keyboard={false}\n      centered\n    >\n      <Modal.Header className=\"justify-content-between\" closeButton>\n        <h5>글쓴이 : {dispatch.user.username}</h5>\n      </Modal.Header>\n      <Container>\n        <Container>\n          <ButtonGroup className=\"mb-2\">\n            <Container>\n              {userInterests.map((userInterrest) => {\n                return radioValue === userInterrest.id ? (\n                  <Button\n                    key={userInterrest.id}\n                    variant=\"secondary\"\n                    id={userInterrest.id}\n                    value={userInterrest.id}\n                    type=\"radio\"\n                    name=\"interest\"\n                    active={true}\n                    onClick={() => changeInterest(userInterrest)}\n                  >\n                    {userInterrest.name}\n                  </Button>\n                ) : (\n                  <Button\n                    key={userInterrest.id}\n                    variant=\"outline-secondary\"\n                    id={userInterrest.id}\n                    value={userInterrest}\n                    onClick={() => changeInterest(userInterrest)}\n                    type=\"radio\"\n                    name=\"interest\"\n                  >\n                    {userInterrest.name}\n                  </Button>\n                );\n              })}\n            </Container>\n          </ButtonGroup>\n        </Container>\n      </Container>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"formBasic\" className=\"mb-3\">\n            제목\n            <FormControl\n              style={{ background: \"#212529\", color: \"white\" }}\n              name=\"title\"\n              onChange={changeValue}\n              aria-label=\"Default\"\n              aria-describedby=\"inputGroup-sizing-default\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formTextArea\" className=\"mb-3\">\n            내용\n            <FormControl\n              style={{ background: \"#212529\", color: \"white\" }}\n              name=\"content\"\n              onChange={changeValue}\n              as=\"textarea\"\n              aria-label=\"With textarea\"\n              rows={15}\n            />\n          </Form.Group>\n          파일첨부\n          <Form.Group controlId=\"formFile\" className=\"mb-3\">\n            <FormControl\n              style={{ background: \"#212529\", color: \"white\" }}\n              name=\"files\"\n              onChange={uploadFiles}\n              type=\"file\"\n              size=\"lg\"\n            />\n          </Form.Group>\n          <Row>\n            {imgBase64.map((base64) => {\n              return (\n                <Col xs={6} md={4}>\n                  <CloseButton\n                    aria-label=\"Hide\"\n                    onClick={() => cancelButton(base64.name)}\n                  ></CloseButton>\n                  <Image\n                    key={base64.id}\n                    className=\"d-block w-100\"\n                    src={base64.img}\n                    rounded\n                  />\n                </Col>\n              );\n            })}\n          </Row>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant={OUTLINE_LIGHT} onClick={beforeWirte}>\n          글쓰기\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default BoardModal;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  Container,\n  Form,\n  FormControl,\n  InputGroup,\n  Modal,\n  Nav,\n  Tab,\n  Tabs,\n} from \"react-bootstrap\";\nimport {\n  ACCESS_TOKEN,\n  GetRequest,\n  HOST_DOMAIN,\n  POST,\n  PostRequest,\n  PUT,\n  PutRequest,\n  REFRESH_TOKEN,\n  ResToken,\n} from \"../../Functions/HttpMethod\";\nimport { UserDispatch } from \"../../Home\";\nimport { OUTLINE_LIGHT } from \"../PartsConstants\";\n\nconst UserModal = ({ show, setShow, userInterests, setUserInterests }) => {\n  const dispatch = useContext(UserDispatch);\n\n  const [item, setItem] = useState({\n    password: \"\",\n    passwordCheck: \"\",\n  });\n\n  const [interest, setInterest] = useState(\"\");\n  const [interests, setInterests] = useState([]);\n\n  const changeInterest = (e) => {\n    setInterest(e.target.value);\n    console.log(interest);\n  };\n\n  const changeValue = (e) => {\n    setItem({\n      ...item,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const deleteInterest = (userInterrest) => {\n    const name = \"유저관심사 삭제하기\";\n    const doamin = `${HOST_DOMAIN}/api/user/interest/delete`;\n    fetch(doamin, PutRequest(userInterrest))\n      .then((response) => {\n        ResToken(response);\n        console.log(response.status);\n        if (response.status === 200) {\n          const temp = [];\n          userInterests.map((interest) => {\n            if (userInterrest.id === interest.id) {\n            } else {\n              temp.push(interest);\n            }\n          });\n          setUserInterests(temp);\n        }\n      })\n      .catch((err) => {\n        alert(`${err}때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  const getUserInterests = (e) => {\n    const name = \"유저관심사 가져오기\";\n    const doamin = `${HOST_DOMAIN}/api/user/interest/list`;\n    fetch(doamin, GetRequest())\n      .then((response) => {\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        if (!response) {\n        } else if (!response.status) {\n          setUserInterests(response);\n        }\n      })\n      .catch((err) => {\n        alert(`${err}때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  const writeUserInterest = (usersinterest) => {\n    const name = \"유저관심사 등록하기\";\n    const doamin = `${HOST_DOMAIN}/api/user/interest/write`;\n    if (!usersinterest) {\n    } else {\n      fetch(doamin, PostRequest(usersinterest))\n        .then((response) => {\n          ResToken(response);\n          return response.json();\n        })\n        .then((response) => {\n          if (!response) {\n          } else if (!response.status) {\n            setUserInterests([...userInterests, response]);\n          } else {\n            alert(`이미 등록하셨습니다.`);\n          }\n        })\n        .catch((err) => {\n          alert(`${err}때문에 ${name}에 실패하였습니다.`);\n        });\n    }\n  };\n\n  const getInterests = (e) => {\n    const name = \"관심사 가져오기\";\n    const doamin = `${HOST_DOMAIN}/interest/list`;\n    fetch(doamin, GetRequest())\n      .then((response) => {\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        if (!response) {\n        } else {\n          setInterests(response);\n        }\n      })\n      .catch((err) => {\n        alert(`${err}때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  const writeInterest = (e) => {\n    e.preventDefault();\n    const name = \"관심사 등록하기\";\n    const doamin = `${HOST_DOMAIN}/api/interest/wirte`;\n    if (!interest) {\n    } else {\n      fetch(doamin, {\n        method: POST,\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          refresh_token: localStorage.getItem(REFRESH_TOKEN),\n          access_token: localStorage.getItem(ACCESS_TOKEN),\n        },\n        body: interest,\n      })\n        .then((response) => {\n          ResToken(response);\n          switch (response.status) {\n            case 500:\n              alert(`${interest}가 이미 존재합니다.`);\n              break;\n            default:\n              alert(`${interest}등록에 성공하였습니다.`);\n              getInterests();\n          }\n        })\n        .catch((err) => {\n          alert(`${err}때문에 ${name}에 실패하였습니다.`);\n        });\n    }\n  };\n\n  useEffect(() => {\n    getInterests();\n    getUserInterests();\n  }, []);\n\n  return (\n    <Modal\n      onHide={() => setShow(false)}\n      show={show}\n      backdrop=\"static\"\n      keyboard={false}\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-lg\"\n      centered\n    >\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"mypage\">\n        <Modal.Header\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          className=\"justify-content-between\"\n          closeButton\n        >\n          <Nav.Item>\n            <Nav.Link eventKey=\"mypage\">\n              <Modal.Title\n                style={{ background: \"#212529\", color: \"white\" }}\n                id=\"contained-modal-title-vcenter\"\n              >\n                회원정보\n              </Modal.Title>\n            </Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link eventKey=\"interest\">\n              <Modal.Title\n                style={{ background: \"#212529\", color: \"white\" }}\n                id=\"contained-modal-title-vcenter\"\n              >\n                관심사\n              </Modal.Title>\n            </Nav.Link>\n          </Nav.Item>\n        </Modal.Header>\n        <Tab.Content>\n          <Tab.Pane eventKey=\"mypage\">\n            <Modal.Body>\n              <InputGroup size=\"lg\">\n                <InputGroup.Text\n                  id=\"inputGroup-sizing-lg\"\n                  style={{ background: \"#212529\", color: \"white\" }}\n                >\n                  유 저 아 이 디\n                </InputGroup.Text>\n                <FormControl\n                  style={{ background: \"#212529\", color: \"white\" }}\n                  name=\"username\"\n                  onChange={changeValue}\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                  disabled\n                  value={dispatch.user.username}\n                />\n              </InputGroup>\n              <hr />\n              <InputGroup size=\"lg\">\n                <InputGroup.Text\n                  id=\"inputGroup-sizing-lg\"\n                  style={{ background: \"#212529\", color: \"white\" }}\n                >\n                  비밀번호수정\n                </InputGroup.Text>\n                <FormControl\n                  style={{ background: \"#212529\", color: \"white\" }}\n                  type=\"password\"\n                  name=\"passwordCheck\"\n                  onChange={changeValue}\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                />\n              </InputGroup>\n              <hr />\n              <InputGroup size=\"lg\">\n                <InputGroup.Text\n                  id=\"inputGroup-sizing-lg\"\n                  style={{ background: \"#212529\", color: \"white\" }}\n                >\n                  비밀번호확인\n                </InputGroup.Text>\n                <FormControl\n                  style={{ background: \"#212529\", color: \"white\" }}\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={changeValue}\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                />\n              </InputGroup>\n            </Modal.Body>\n            <Modal.Footer\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Button\n                size=\"lg\"\n                variant=\"outline-light\"\n                type=\"submit\"\n                onClick={() => {}}\n              >\n                회원정보수정\n              </Button>\n            </Modal.Footer>\n          </Tab.Pane>\n          <Tab.Pane eventKey=\"interest\">\n            <Modal.Body>\n              <ButtonGroup siza=\"lg\">\n                <Container\n                  style={{\n                    \"overflow-y\": \"auto\",\n                    \"max-height\": \"200px\",\n                  }}\n                >\n                  {userInterests.map((userInterrest) => {\n                    return (\n                      <Button\n                        onClick={() => deleteInterest(userInterrest)}\n                        variant={OUTLINE_LIGHT}\n                      >\n                        <h5>{userInterrest.name}</h5>\n                      </Button>\n                    );\n                  })}\n                </Container>\n              </ButtonGroup>\n              <hr />\n              <Container>\n                <Form className=\"d-flex\">\n                  <FormControl\n                    size=\"lg\"\n                    type=\"search\"\n                    name=\"keyword\"\n                    className=\"md-6\"\n                    placeholder=\"Search\"\n                    aria-label=\"Search\"\n                    style={{ background: \"#212529\", color: \"white\" }}\n                    onChange={changeValue}\n                  />\n\n                  <Button size=\"lg\" variant=\"outline-secondary\">\n                    Search\n                  </Button>\n                </Form>\n                <Container\n                  className=\"d-grid gap-0\"\n                  style={{ \"overflow-y\": \"auto\", \"max-height\": \"200px\" }}\n                >\n                  {interests.map((interest) => {\n                    return (\n                      <Button\n                        onClick={() => writeUserInterest(interest)}\n                        variant={OUTLINE_LIGHT}\n                      >\n                        <h5>{interest.name}</h5>\n                      </Button>\n                    );\n                  })}\n                </Container>\n              </Container>\n            </Modal.Body>\n            <Modal.Footer>\n              <Container>\n                <h5>관심사 등록</h5>\n                <Form className=\"d-flex\">\n                  <FormControl\n                    size=\"lg\"\n                    type=\"search\"\n                    name=\"keyword\"\n                    className=\"md-6\"\n                    placeholder=\"Search\"\n                    aria-label=\"Search\"\n                    style={{ background: \"#212529\", color: \"white\" }}\n                    onChange={changeInterest}\n                  />\n\n                  <Button\n                    onClick={writeInterest}\n                    size=\"lg\"\n                    variant=\"outline-secondary\"\n                  >\n                    Enroll\n                  </Button>\n                </Form>\n              </Container>\n            </Modal.Footer>\n          </Tab.Pane>\n        </Tab.Content>\n      </Tab.Container>\n    </Modal>\n  );\n};\n\nexport default UserModal;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { ButtonGroup, Container, Button, Pagination } from \"react-bootstrap\";\nimport BoardItem from \"./BoardItem\";\nimport { OUTLINE_LIGHT } from \"../PartsConstants\";\nimport BoardModal from \"./BoardModal\";\nimport UserModal from \"../User/UserModal\";\nimport {\n  GET,\n  ACCESS_TOKEN,\n  HOST_DOMAIN,\n  REFRESH_TOKEN,\n  ResToken,\n  GetRequest,\n  PostRequest,\n} from \"../../Functions/HttpMethod\";\nimport { UserDispatch } from \"../../Home\";\n\nconst BoardList = (props) => {\n  const [show, setShow] = useState(false);\n  const [userShow, setUserShow] = useState(false);\n  const [items, setItems] = useState({\n    page: 0,\n    total: 0,\n    pages: [],\n    boards: [],\n  });\n\n  const [userInterests, setUserInterests] = useState([]);\n\n  const dispatch = useContext(UserDispatch);\n  const keyword = props.location.search.slice(1);\n  const getBoardList = (page) => {\n    const name = \"글목록가져오기\";\n    const domain = `/board/list?page=${page}&${keyword}`;\n    fetch(`${HOST_DOMAIN + domain}`, {\n      method: GET,\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        refresh_token: localStorage.getItem(REFRESH_TOKEN),\n        access_token: localStorage.getItem(ACCESS_TOKEN),\n      },\n    })\n      .then((response) => {\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        console.log(response);\n        setItems(response);\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  const getInterests = (e) => {\n    const name = \"관심사 가져오기\";\n    const doamin = `${HOST_DOMAIN}/interest/list`;\n    fetch(doamin, GetRequest())\n      .then((response) => {\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        if (!response) {\n        } else {\n          setUserInterests(response);\n        }\n      })\n      .catch((err) => {\n        alert(`${err}때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  const getUserInterests = (e) => {\n    const name = \"유저관심사 가져오기\";\n    const doamin = `${HOST_DOMAIN}/api/user/interest/list`;\n    fetch(doamin, GetRequest())\n      .then((response) => {\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        console.log(response);\n        if (!response) {\n        } else if (!response.status) {\n          setUserInterests(response);\n        }\n      })\n      .catch((err) => {\n        alert(`${err}때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  const getBoardsOfInterest = (page, interset) => {\n    const name = \"관심사글목록가져오기\";\n    const domain = `/board/list/interest?page${page}`;\n    fetch(`${HOST_DOMAIN + domain}`, PostRequest(interset))\n      .then((response) => {\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        setItems(response);\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  const getBoardsByRecommend = (page) => {\n    const name = \"추천순글목록가져오기\";\n    const domain = `/board/list/recommend?page${page}`;\n    fetch(`${HOST_DOMAIN + domain}`, GetRequest())\n      .then((response) => {\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        setItems(response);\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  useEffect(() => {\n    dispatch.user.active === true ? getUserInterests() : getInterests();\n\n    getBoardList(0);\n  }, [keyword]);\n\n  return (\n    <>\n      <BoardModal\n        show={show}\n        setShow={setShow}\n        getBoardList={getBoardList}\n        userInterests={userInterests}\n      />\n      <UserModal\n        show={userShow}\n        setShow={setUserShow}\n        userInterests={userInterests}\n        setUserInterests={setUserInterests}\n      />\n      <Container style={{ marginLeft: 0 }} className=\"col-10\">\n        {items.boards.map((item) => {\n          return <BoardItem key={item.id} item={item} />;\n        })}\n        <Container className=\"d-flex justify-content-center\">\n          <Pagination>\n            <Pagination.First onClick={() => getBoardList(0)} />\n\n            {items.pages.map((page) => {\n              if (page === items.page) {\n                return (\n                  <Pagination.Item\n                    key={page}\n                    active\n                    onClick={() => getBoardList(page)}\n                  >\n                    {page + 1}\n                  </Pagination.Item>\n                );\n              }\n\n              return (\n                <Pagination.Item key={page} onClick={() => getBoardList(page)}>\n                  {page + 1}\n                </Pagination.Item>\n              );\n            })}\n\n            <Pagination.Last onClick={() => getBoardList(items.total - 1)} />\n          </Pagination>\n        </Container>\n      </Container>\n\n      <Container\n        className=\"col-3 d-flex fixed-top flex-column align-items-start bd-highlight\"\n        style={{ marginLeft: \"78%\", marginTop: \"3%\" }}\n      >\n        <br />\n        <br />\n\n        <br />\n        {dispatch.user.active === true ? (\n          <>\n            <Button\n              onClick={() => setUserShow(true)}\n              username={dispatch.user.username}\n              variant={OUTLINE_LIGHT}\n            >\n              <h5>마이페이지</h5>\n            </Button>\n            <br />\n            <Button onClick={() => setShow(true)} variant={OUTLINE_LIGHT}>\n              <h5>글쓰기</h5>\n            </Button>\n          </>\n        ) : (\n          <></>\n        )}\n        <br />\n        <ButtonGroup siza=\"lg\" vertical>\n          <Button onClick={() => getBoardList(0)} variant={OUTLINE_LIGHT}>\n            <h5>최신</h5>\n          </Button>\n          <Button\n            onClick={() => getBoardsByRecommend(0)}\n            variant={OUTLINE_LIGHT}\n          >\n            <h5>화제</h5>\n          </Button>\n          {userInterests.map((interest) => {\n            return (\n              <Button\n                key={interest.id}\n                onClick={() => getBoardsOfInterest(0, interest)}\n                variant={OUTLINE_LIGHT}\n              >\n                <h5>{interest.name}</h5>\n              </Button>\n            );\n          })}\n        </ButtonGroup>\n\n        <br />\n        <br />\n      </Container>\n    </>\n  );\n};\n\nexport default BoardList;\n","import React, { useContext, useState } from \"react\";\nimport { Button, FormControl } from \"react-bootstrap\";\nimport context from \"react-bootstrap/esm/AccordionContext\";\nimport { HOST_DOMAIN, PostRequest, ResToken } from \"../../Functions/HttpMethod\";\nimport { UserDispatch } from \"../../Home\";\nimport { OUTLINE_LIGHT } from \"../PartsConstants\";\n\nconst ReplyForm = ({ boardId, getReply, page, history }) => {\n  const dispatch = useContext(UserDispatch);\n\n  const [reply, setReply] = useState({\n    boardId: boardId,\n    content: \"\",\n  });\n\n  const changeValue = (e) => {\n    setReply({ ...reply, [e.target.name]: e.target.value });\n  };\n\n  const beforeWirte = (e) => {\n    e.preventDefault();\n    if (reply.content === \"\") {\n      alert(\"댓글을 입력하여주세요\");\n    } else {\n      writeReply();\n    }\n  };\n\n  const writeReply = () => {\n    const domain = \"/api/board/reply/write\";\n    const name = \"댓글쓰기\";\n\n    fetch(`${HOST_DOMAIN + domain}`, PostRequest(reply))\n      .then((response) => {\n        if (response.status === 403) {\n          dispatch.setUser({\n            username: localStorage.getItem(\"username\"),\n            active: localStorage.getItem(\"username\") !== null ? true : false,\n          });\n          alert(\"다시 로그인하여 주세요\");\n        } else {\n          ResToken(response);\n        }\n\n        return response.json();\n      })\n      .then((response) => {\n        if (!response) {\n        } else {\n          setReply({ boardId: boardId, content: \"\" });\n          getReply(page);\n        }\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  return (\n    <>\n      <FormControl\n        style={{ background: \"#212529\", color: \"white\" }}\n        name=\"content\"\n        onChange={changeValue}\n        as=\"textarea\"\n        aria-label=\"With textarea\"\n        rows={3}\n        value={reply.content}\n      ></FormControl>\n      <Button\n        className=\"d-flex-rows\"\n        onClick={beforeWirte}\n        variant={OUTLINE_LIGHT}\n      >\n        <span>등 록</span>\n      </Button>\n    </>\n  );\n};\n\nexport default ReplyForm;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  FormControl,\n  OverlayTrigger,\n  Popover,\n} from \"react-bootstrap\";\nimport { HOST_DOMAIN, PostRequest, ResToken } from \"../../Functions/HttpMethod\";\nimport { UserDispatch } from \"../../Home\";\nimport { OUTLINE_LIGHT } from \"../PartsConstants\";\n\nconst ReplyItem = (props) => {\n  const dispatch = useContext(UserDispatch);\n  const { id, board, content, page, user, parent, groupId } = props.reply;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [reply, setReply] = useState({\n    parentId: id,\n    boardId: board.id,\n    groupId: groupId,\n    content: \"\",\n  });\n\n  const changeValue = (e) => {\n    setReply({ ...reply, [e.target.name]: e.target.value });\n  };\n\n  const beforeWirte = (e) => {\n    e.preventDefault();\n    if (reply.content === \"\") {\n      alert(\"댓글을 입력하여주세요\");\n    } else {\n      writeReply();\n    }\n  };\n\n  const writeReply = () => {\n    const domain = \"/api/board/reply/writeto\";\n    const name = \"대댓글쓰기\";\n    fetch(`${HOST_DOMAIN + domain}`, PostRequest(reply))\n      .then((response) => {\n        handleClose();\n\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        if (response === 201) {\n          setReply({ ...reply, content: \"\" });\n          props.getReply(page);\n        }\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  return (\n    <Card\n      size=\"sm\"\n      boarder={\"info\"}\n      bg={\"dark\"}\n      text={\"white\"}\n      style={{ position: \"center\" }}\n    >\n      <Card.Body>\n        {dispatch.user.active === true &&\n        dispatch.user.username !== user.username ? (\n          <>\n            <OverlayTrigger\n              trigger=\"click\"\n              rootClose\n              onToggle={handleClose}\n              placement=\"right\"\n              show={show}\n              onHide={handleClose}\n              overlay={\n                <Popover\n                  style={{\n                    background: \"#212529\",\n                    color: \"white\",\n                    opacity: \"0.9\",\n                    \"max-width\": \"700px\",\n                  }}\n                  name=\"content\"\n                  id=\"popover-basic\"\n                >\n                  <Popover.Title\n                    style={{ background: \"#212529\", color: \"white\" }}\n                    name=\"id\"\n                    as=\"h3\"\n                    className=\"d-flex justify-content-between\"\n                  >\n                    <>{user.username}님에게 댓글쓰기</>\n                  </Popover.Title>\n                  <Popover.Content className=\"d-flex justify-content-between\">\n                    <FormControl\n                      key={id}\n                      style={{ background: \"#212529\", color: \"white\" }}\n                      name=\"content\"\n                      onChange={changeValue}\n                      as=\"textarea\"\n                      aria-label=\"With textarea\"\n                      rows={3}\n                      value={reply.content}\n                    ></FormControl>\n                    <Button\n                      className=\"d-flex-rows\"\n                      onClick={beforeWirte}\n                      variant={OUTLINE_LIGHT}\n                    >\n                      <span>등 록</span>\n                    </Button>\n                  </Popover.Content>\n                </Popover>\n              }\n            >\n              <>\n                <Button onClick={handleShow} variant=\"link\">\n                  {user.username}\n                </Button>\n              </>\n            </OverlayTrigger>\n          </>\n        ) : (\n          <>\n            <Button disabled variant=\"link\">\n              {user.username}\n            </Button>\n          </>\n        )}\n        {parent === null ? \"\" : ` @ ${parent.user.username}`}\n\n        <Card.Text>{content}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ReplyItem;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  Container,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport {\n  convertFormatToDate,\n  DeleteRequest,\n  GetRequest,\n  HOST_DOMAIN,\n  ResToken,\n} from \"../../Functions/HttpMethod\";\nimport { UserDispatch } from \"../../Home\";\nimport { OUTLINE_LIGHT } from \"../PartsConstants\";\nimport ReplyForm from \"./ReplyForm\";\nimport ReplyItem from \"./ReplyItem\";\n\nconst BoardPage = (props) => {\n  const id = props.match.params.id;\n  const dispatch = useContext(UserDispatch);\n\n  const [show, setShow] = useState(false);\n\n  const [board, setBoard] = useState({\n    id: id,\n    username: \"\",\n    title: \"\",\n    user: {},\n    content: \"\",\n    count: 0,\n    createTime: \"\",\n    boardFiles: [],\n  });\n\n  const [resReply, setResReply] = useState({\n    page: 0,\n    pages: [],\n    replys: [],\n  });\n\n  const [recommend, setRecommend] = useState(0);\n\n  const getBoard = () => {\n    const name = \"글가져오기\";\n    const domain = \"/board/\" + id;\n    fetch(`${HOST_DOMAIN + domain}`, GetRequest())\n      .then((response) => {\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        setBoard(response);\n        setRecommend(response.recommend);\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  const getReply = (page) => {\n    const name = \"댓글가져오기\";\n    const domain = `/board/${id}/reply/list?page=${page}`;\n    fetch(`${HOST_DOMAIN + domain}`, GetRequest())\n      .then((response) => {\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        setResReply(response);\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  const recommedBoard = () => {\n    const name = \"추천하기\";\n    const domain = \"/api/board/recommend/\" + id;\n    fetch(`${HOST_DOMAIN + domain}`, GetRequest())\n      .then((response) => {\n        if (response.status === 403) {\n          dispatch.setUser({\n            username: localStorage.getItem(\"username\"),\n            active: localStorage.getItem(\"username\") !== null ? true : false,\n          });\n          alert(\"다시 로그인하여 주세요\");\n        } else {\n          ResToken(response);\n        }\n        return response.json();\n      })\n      .then((response) => {\n        if (response === 0) {\n          alert(\"이미 추천하셨습니다.\");\n        } else {\n          setRecommend(response);\n        }\n      })\n      .catch((error) => {\n        alert(`${error} 그리하여 ${name}실패 하였습니다.`);\n      });\n  };\n\n  const deleteBoard = () => {\n    const name = \"삭제하기\";\n    const domain = \"/api/board/delete/\" + id;\n    fetch(`${HOST_DOMAIN + domain}`, DeleteRequest())\n      .then((response) => {\n        if (response.status === 403) {\n          dispatch.setUser({\n            username: localStorage.getItem(\"username\"),\n            active: localStorage.getItem(\"username\") !== null ? true : false,\n          });\n          alert(\"다시 로그인하여 주세요\");\n        } else {\n          ResToken(response);\n        }\n        if (response.status === 200) {\n          alert(\"삭제가 완료되었습니다.\");\n          props.history.push(\"/\");\n        }\n      })\n      .catch((error) => {\n        if (error.statusCode === 403) {\n          alert(\"로그아웃되었습니다. 로그인해주세요.\");\n        } else {\n          alert(`${error.statusCode} 그리하여 ${name}실패 하였습니다.`);\n        }\n      });\n  };\n\n  useEffect(() => {\n    getBoard();\n    getReply(resReply.page);\n  }, []);\n\n  return (\n    <Container className=\"col-10\">\n      <Card\n        boarder={\"info\"}\n        bg={\"dark\"}\n        text={\"white\"}\n        style={{ position: \"center\" }}\n      >\n        <Card.Header>\n          <Card.Title className=\"d-flex justify-content-between\">\n            <strong>{board.title}</strong>\n            <strong>{board.username}</strong>\n          </Card.Title>\n        </Card.Header>\n        <Card.Header>\n          <Card.Subtitle className=\"d-flex justify-content-between\">\n            <small>조회수: {board.count}</small>\n            <small>작성날짜: {convertFormatToDate(board.createTime)}</small>\n          </Card.Subtitle>\n        </Card.Header>\n        <Card.Body>\n          <Card.Text>{board.content}</Card.Text>\n          {board.boardFiles.map((file) => {\n            return (\n              <>\n                <Card.Img\n                  key={file.id}\n                  src={`${HOST_DOMAIN + \"/\" + file.filePath}`}\n                />\n              </>\n            );\n          })}\n          <hr />\n          <Card.Subtitle className=\"d-flex justify-content-center\">\n            <Button\n              disabled={!dispatch.user.active}\n              variant=\"outline-primary\"\n              onClick={recommedBoard}\n            >\n              추천 {recommend}\n            </Button>\n            {/* <Button variant=\"outline-danger\">비추천 {board.recommend}</Button> */}\n          </Card.Subtitle>\n\n          {dispatch.user.username === board.username ? (\n            <div className=\"d-flex justify-content-end\">\n              <Link to={\"/board/modify/\" + id}>\n                <Button variant=\"outline-secondary\">수정</Button>\n              </Link>\n\n              <Button onClick={deleteBoard} variant=\"outline-secondary\">\n                삭제\n              </Button>\n            </div>\n          ) : (\n            <></>\n          )}\n        </Card.Body>\n\n        <hr />\n        <Card.Body>\n          {resReply.replys.map((reply) => {\n            return (\n              <>\n                <ReplyItem key={reply.id} reply={reply} getReply={getReply} />\n              </>\n            );\n          })}\n        </Card.Body>\n        <Card.Footer>\n          <ButtonToolbar\n            className=\"justify-content-center\"\n            aria-label=\"Toolbar with button groups\"\n          >\n            <ButtonGroup className=\"me-2\" aria-label=\"First group\">\n              {resReply.pages.map((page) => {\n                return (\n                  <Button\n                    key={page}\n                    onClick={() => getReply(page)}\n                    variant={OUTLINE_LIGHT}\n                  >\n                    {page + 1}\n                  </Button>\n                );\n              })}\n            </ButtonGroup>\n          </ButtonToolbar>\n          <br />\n        </Card.Footer>\n        {dispatch.user.active === true ? (\n          <Card.Footer className=\"d-flex\">\n            <ReplyForm boardId={id} getReply={getReply} page={resReply.page} />\n          </Card.Footer>\n        ) : (\n          <></>\n        )}\n        <>\n          <Card.Footer className=\"d-flex justify-content-between\">\n            <Button\n              onClick={() => props.history.push(\"/\")}\n              variant={OUTLINE_LIGHT}\n            >\n              돌아가기\n            </Button>\n          </Card.Footer>\n        </>\n\n        <br></br>\n      </Card>\n    </Container>\n  );\n};\n\nexport default BoardPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CloseButton,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  Image,\n  Row,\n} from \"react-bootstrap\";\nimport {\n  ACCESS_TOKEN,\n  convertFormatToDate,\n  DeleteRequest,\n  GetRequest,\n  HOST_DOMAIN,\n  PostRequest,\n  PutRequest,\n  REFRESH_TOKEN,\n  ResToken,\n} from \"../../Functions/HttpMethod\";\nimport { UserDispatch } from \"../../Home\";\nimport { OUTLINE_LIGHT } from \"../PartsConstants\";\nimport ReplyForm from \"./ReplyForm\";\nimport ReplyItem from \"./ReplyItem\";\n\nconst BoardModifyPage = (props) => {\n  const id = props.match.params.id;\n\n  const dispatch = useContext(UserDispatch);\n\n  const [board, setBoard] = useState({\n    id: id,\n    username: \"\",\n    title: \"\",\n    user: {},\n    content: \"\",\n    count: 0,\n    createTime: \"\",\n    boardFiles: [],\n    interest: \"\",\n  });\n\n  const [imgBase64, setImgBase64] = useState([]);\n  const [files, setFiles] = useState([]);\n\n  const changeValue = (e) => {\n    setBoard({ ...board, [e.target.name]: e.target.value });\n  };\n\n  const getBoard = () => {\n    const name = \"글가져오기\";\n    const domain = \"/board/\" + id;\n    fetch(`${HOST_DOMAIN + domain}`, GetRequest())\n      .then((response) => {\n        if (response.status === 403) {\n          dispatch.setUser({\n            username: localStorage.getItem(\"username\"),\n            active: localStorage.getItem(\"username\") !== null ? true : false,\n          });\n          alert(\"다시 로그인하여 주세요\");\n          props.history.push(`/board/${id}`);\n        }\n        ResToken(response);\n        return response.json();\n      })\n      .then((response) => {\n        setBoard(response);\n      })\n      .catch((error) => {\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  const CancelBoardFiles = (id) => {\n    const temp = board.boardFiles;\n\n    temp.map((file) => {\n      if (file.id === id) {\n      } else {\n        temp.pop(file);\n        setBoard({ ...board, boardFiles: temp });\n      }\n    });\n  };\n\n  const cancelButton = (name) => {\n    const temp1 = [];\n\n    imgBase64.map((img) => {\n      if (img.name === name) {\n      } else {\n        temp1.push(img);\n      }\n    });\n    setImgBase64(temp1);\n\n    const temp2 = [];\n    files.map((file) => {\n      if (file.name === name) {\n      } else {\n        temp2.push(file);\n      }\n    });\n    setFiles(temp2);\n  };\n\n  const uploadFiles = (e) => {\n    for (let i = 0; i < e.target.files.length; i++) {\n      if (e.target.files[i]) {\n        console.log(e.target.files[i]);\n        setFiles([...files, e.target.files[i]]);\n        let reader = new FileReader();\n        reader.readAsDataURL(e.target.files[i]);\n        reader.onloadend = () => {\n          const base64 = reader.result;\n          if (base64) {\n            let name = e.target.files[i].name;\n            let base64Sub = base64.toString();\n\n            setImgBase64((imgBase64) => [\n              ...imgBase64,\n              { id: i, name: name, img: base64Sub },\n            ]);\n          }\n        };\n      }\n    }\n  };\n\n  const modify = () => {\n    const name = \"글수정하기\";\n    const domain = \"/api/board/modify\";\n    let multipleFiles = new FormData();\n\n    multipleFiles.append(\n      \"board\",\n      new Blob([JSON.stringify(board)], {\n        type: \"application/json\",\n      })\n    );\n\n    if (files) {\n      Object.values(files).forEach((file) => {\n        multipleFiles.append(\"files\", file);\n      });\n    }\n\n    fetch(`${HOST_DOMAIN + domain}`, {\n      method: \"PUT\",\n      headers: {\n        refresh_token: localStorage.getItem(REFRESH_TOKEN),\n        access_token: localStorage.getItem(ACCESS_TOKEN),\n      },\n      body: multipleFiles,\n    })\n      .then((response) => {\n        if (response.status === 403) {\n          dispatch.setUser({\n            username: localStorage.getItem(\"username\"),\n            active: localStorage.getItem(\"username\") !== null ? true : false,\n          });\n          alert(\"다시 로그인하여 주세요\");\n          props.history.push(`/board/${id}`);\n        }\n\n        ResToken(response);\n        setImgBase64([]);\n        setFiles([]);\n        return response.json();\n      })\n      .then((response) => {\n        props.history.push(`/board/${id}`);\n      })\n      .catch((error) => {\n        if (error.status === 403) {\n        }\n        alert(`${error}의문제 때문에 ${name}에 실패하였습니다.`);\n      });\n  };\n\n  useEffect(() => {\n    getBoard();\n  }, []);\n\n  return (\n    <Container className=\"col-10\">\n      <Card\n        boarder={\"info\"}\n        bg={\"dark\"}\n        text={\"white\"}\n        style={{ position: \"center\" }}\n      >\n        <Form>\n          <Card.Header>\n            <strong>작성자 : {board.username}</strong>\n            <Card.Subtitle className=\"d-flex justify-content-between\">\n              <small>조회수: {board.count}</small>\n              <small>작성날짜: {convertFormatToDate(board.createTime)}</small>\n            </Card.Subtitle>\n          </Card.Header>\n          <Card.Header>\n            <Form.Group>\n              제목\n              <Form.Control\n                style={{ background: \"#212529\", color: \"white\" }}\n                name=\"title\"\n                value={board.title}\n                onChange={changeValue}\n                aria-label=\"Default\"\n                aria-describedby=\"inputGroup-sizing-default\"\n              />\n            </Form.Group>\n          </Card.Header>\n          <Card.Body>\n            <Form.Group controlId=\"formTextArea\" className=\"mb-3\">\n              내용\n              <FormControl\n                style={{ background: \"#212529\", color: \"white\" }}\n                name=\"content\"\n                value={board.content}\n                onChange={changeValue}\n                as=\"textarea\"\n                aria-label=\"With textarea\"\n                rows={15}\n              />\n            </Form.Group>\n            파일첨부\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <FormControl\n                style={{ background: \"#212529\", color: \"white\" }}\n                name=\"files\"\n                onChange={uploadFiles}\n                type=\"file\"\n                size=\"lg\"\n              />\n            </Form.Group>\n            <Row>\n              <>\n                {board.boardFiles.map((base64) => {\n                  return (\n                    <Col xs={6} md={4}>\n                      <CloseButton\n                        aria-label=\"Hide\"\n                        onClick={CancelBoardFiles}\n                      ></CloseButton>\n                      <Image\n                        key={base64.id}\n                        className=\"d-block w-100\"\n                        src={`${HOST_DOMAIN}/${base64.filePath}`}\n                        rounded\n                      />\n                    </Col>\n                  );\n                })}\n              </>\n              <>\n                {imgBase64.map((base64) => {\n                  return (\n                    <Col xs={6} md={4}>\n                      <CloseButton\n                        aria-label=\"Hide\"\n                        onClick={() => cancelButton(base64.name)}\n                      ></CloseButton>\n                      <Image\n                        key={base64.id}\n                        className=\"d-block w-100\"\n                        src={base64.img}\n                        rounded\n                      />\n                    </Col>\n                  );\n                })}\n              </>\n            </Row>\n          </Card.Body>\n\n          <Card.Footer className=\"d-flex justify-content-between\">\n            <Button onClick={() => modify()} variant=\"outline-secondary\">\n              수정\n            </Button>\n\n            <Button\n              onClick={() => props.history.push(`/board/${id}`)}\n              variant={OUTLINE_LIGHT}\n            >\n              돌아가기\n            </Button>\n          </Card.Footer>\n        </Form>\n        <br></br>\n      </Card>\n    </Container>\n  );\n};\n\nexport default BoardModifyPage;\n","import React, { useState } from \"react\";\nimport \"../style.css\";\nimport {\n  BrowserRouter,\n  Route,\n} from \"react-router-dom/cjs/react-router-dom.min\";\n\nimport BoardList from \"./Board/BoardList\";\nimport BoardPage from \"./Board/BoardPage\";\nimport BoardModifyPage from \"./Board/BoardModifyPage\";\n\nconst Body = () => {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" exact={true} component={BoardList} />\n      <Route path=\"/?keyword=:keyword\" component={BoardList} />\n      <Route path=\"/board/:id\" exact={true} component={BoardPage} />\n      <Route\n        path=\"/board/modify/:id\"\n        exact={true}\n        component={BoardModifyPage}\n      />\n    </BrowserRouter>\n  );\n};\n\nexport default Body;\n","import React, { createContext, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nimport Header from \"./Parts/Header\";\nimport Body from \"./Parts/Body\";\n\nexport const UserDispatch = createContext(null);\n\nconst Home = () => {\n  // const [state, dispatch] = useReducer(reducer, user);\n\n  const [user, setUser] = useState({\n    username: localStorage.getItem(\"username\"),\n    active: localStorage.getItem(\"username\") !== null ? true : false,\n  });\n\n  // 검색기능\n  const [keyword, setKeyword] = useState(\"\");\n\n  return (\n    <UserDispatch.Provider value={{ user, setUser, keyword, setKeyword }}>\n      <Container>\n        <Header user={user} />\n        <br />\n        <Body />\n      </Container>\n    </UserDispatch.Provider>\n  );\n};\n\nexport default Home;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <div\n      className=\"App\"\n      style={{ opacity: 0.9, backgroundColor: \"transparent\" }}\n    >\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}